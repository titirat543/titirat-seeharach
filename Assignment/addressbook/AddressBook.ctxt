#BlueJ class context
comment0.params=g
comment0.target=void\ paintComponent(java.awt.Graphics)
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ \ The\ main\ program\ launcher\ for\ the\ AddressBook\ class.\r\n\r\n\ @param\ \ args\ \ The\ command\ line\ arguments\ (ignored\ here).\r\n
comment10.params=
comment10.target=void\ doFindContact()
comment10.text=\r\n\ Search\ for\ the\ contact\ whose\ name\ is\ an\ exact\ match\ to\ the\ name\ given\ in\ the\ name\ text\ field.\r\n\r\n\ The\ search\ name\ must\ not\ be\ empty.\r\n\ If\ found\ then\ the\ contact\ becomes\ selected.\r\n\ If\ not\ found\ then\ the\ user\ is\ notified,\ and\ the\ selected\ contact\ does\ not\ change.\r\n
comment11.params=
comment11.target=void\ doFindPartial()
comment11.text=\r\n\ Search\ for\ the\ contact\ whose\ name\ contains\ the\ text\ given\ in\ the\ name\ text\ field,\r\n\ case\ insensitively.\r\n\r\n\ The\ search\ text\ must\ not\ be\ empty.\r\n\ If\ found\ then\ the\ contact\ becomes\ selected.\r\n\ If\ not\ found\ then\ the\ user\ is\ notified,\ and\ the\ selected\ contact\ does\ not\ change.\r\n
comment12.params=
comment12.target=void\ doSortAtoZ()
comment12.text=\r\n\ Re-order\ the\ contacts\ in\ the\ database\ so\ that\ the\ names\ are\ in\ ascending\ alphabetic\ order\r\n\r\n\ The\ first\ contact\ becomes\ selected,\ provided\ that\ there\ is\ one.\r\n
comment13.params=
comment13.target=void\ doSortZtoA()
comment13.text=\r\n\ Re-order\ the\ contacts\ in\ the\ database\ so\ that\ the\ names\ are\ in\ descending\ alphabetic\ order\r\n\r\n\ The\ first\ contact\ becomes\ selected,\ provided\ that\ there\ is\ one.\r\n
comment14.params=newName\ newAddress\ newMobile\ newEmail
comment14.target=int\ addContact(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment14.text=\r\n\ Add\ a\ new\ contact\ to\ the\ database\ in\ the\ next\ available\ location,\ if\ there\ is\ space.\r\n\r\n\ Return\ the\ index\ where\ added\ if\ successful,\ or\ -1\ if\ no\ space\ so\ not\ added.\r\n
comment15.params=index
comment15.target=void\ deleteContact(int)
comment15.text=\r\n\ Delete\ the\ indicated\ contact\ from\ the\ database\r\n\r\n\ All\ contacts\ in\ subsequent\ (higher\ indexed)\ elements\ of\ the\ arrays\ are\ moved\ "down"\ to\ fill\ the\ "gap".\r\n\ The\ order\ of\ the\ remaining\ contacts\ is\ unchanged\ (for\ example,\ if\ previously\ sorted\ alphabetically,\r\n\ then\ so\ will\ they\ be\ after\ deletion).\r\n
comment16.params=
comment16.target=void\ clearContacts()
comment16.text=\r\n\ Clear\ the\ contacts\ database\ -\ set\ to\ empty\r\n
comment17.params=searchName
comment17.target=int\ findContact(java.lang.String)
comment17.text=\r\n\ Search\ the\ database\ for\ an\ exact\ match\ for\ the\ given\ name.\r\n\r\n\ Return\ the\ index\ of\ the\ match\ found,\ or\ -1\ if\ no\ match\ found.\r\n
comment18.params=searchText
comment18.target=int\ findPartial(java.lang.String)
comment18.text=\r\n\ Search\ the\ database\ for\ a\ contact\ whose\ name\ contains\ the\ given\ search\ text,\ case\ insensitively.\r\n\r\n\ Return\ the\ index\ of\ the\ match\ found,\ or\ -1\ if\ no\ match\ found.\r\n
comment19.params=name\ i\ j
comment19.target=void\ swapAlphabet(java.lang.String[],\ int,\ int)
comment19.text=\r\n\ swaps\ two\ element\ at\ indicates\ i\ and\ j\ of\ the\ array\ \r\n\ for\ sorting\ a\ to\ z\ or\ z\ to\ a\r\n
comment2.params=
comment2.target=void\ setUpAddressBook()
comment2.text=Organizes\ overall\ set\ up\ of\ the\ address\ book\ data\ at\ launch\ time.
comment20.params=
comment20.target=void\ sortAtoZ()
comment20.text=\r\n\ Re-order\ the\ contacts\ in\ the\ database\ so\ that\ the\ names\ are\ in\ ascending\ alphabetic\ order\r\n
comment21.params=
comment21.target=void\ sortZtoA()
comment21.text=\r\n\ Re-order\ the\ contacts\ in\ the\ database\ so\ that\ the\ names\ are\ in\ descending\ alphabetic\ order\r\n
comment3.params=
comment3.target=void\ setUpGUI()
comment3.text=\ Sets\ up\ the\ graphical\ user\ interface.\r\n\r\n\ Some\ extra\ embedded\ JPanels\ are\ used\ to\ improve\ layout\ a\ little\r\n
comment4.params=g
comment4.target=void\ paintScreen(java.awt.Graphics)
comment4.text=\r\n\ \ Display\ non-background\ colour\ areas,\ heading\ and\ currently\ selected\ database\ contact.\r\n\r\n\ @param\ \ g\ \ The\ Graphics\ area\ to\ be\ drawn\ on,\ already\ cleared.\r\n
comment5.params=g
comment5.target=void\ displayCurrentDetails(java.awt.Graphics)
comment5.text=\r\n\ \ Display\ the\ currently\ selected\ contact.\r\n\r\n\ @param\ \ g\ \ The\ Graphics\ area\ to\ be\ drawn\ on.\r\n
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.text=\r\n\ \ Handle\ the\ various\ button\ clicks.\r\n\r\n\ @param\ \ e\ \ Information\ about\ the\ button\ click\r\n
comment7.params=
comment7.target=void\ doAddContact()
comment7.text=\r\n\ Add\ a\ new\ contact\ using\ data\ from\ the\ entry\ text\ fields\r\n\r\n\ Only\ adds\ if\ the\ name\ field\ is\ not\ empty\ (other\ fields\ do\ not\ matter),\r\n\ and\ if\ there\ is\ space\ in\ the\ arrays.\r\n\ Pops\ up\ dialogue\ box\ giving\ reason\ if\ contact\ is\ not\ added.\r\n\ The\ new\ contact\ is\ selected\ immediately.\r\n
comment8.params=
comment8.target=void\ doDeleteContact()
comment8.text=\r\n\ Delete\ the\ currently\ selected\ contact\r\n\r\n\ If\ there\ are\ no\ contacts,\ then\ notify\ the\ user,\ but\ otherwise\ no\ action.\r\n\ Otherwise\ delete,\ and\ the\ following\ remaining\ contact\ becomes\ selected.\r\n\ If\ there\ is\ no\ following\ contact\ (that\ is,\ just\ deleted\ the\ highest\ indexed\ contact),\r\n\ then\ the\ previous\ becomes\ selected.\r\n\ If\ there\ is\ no\ previous\ (that\ is,\ just\ deleted\ contact\ 0),\ then\ all\ contacts\ have\r\n\ been\ deleted\ and\ so\ no\ contact\ is\ selected.\r\n
comment9.params=
comment9.target=void\ doDeleteAll()
comment9.text=\r\n\ Delete\ all\ the\ contacts\ -\ clear\ the\ list\r\n
numComments=22
